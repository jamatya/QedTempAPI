apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: temp-students-api
  description: Retrieve Temp Students details
spec:
  type: openapi
  lifecycle: production
  owner: dp-team
  system: api-portal
  definition: |  
    openapi: 3.0.3
    info:
      title: QED Temp Students API - OpenAPI 3.0
      description: 'This is a temporary API that contains mock data related to QED'
      termsOfService: http://swagger.io/terms/
      license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
      version: '0.1'
    externalDocs:
      description: Find out more about Swagger
      url: http://swagger.io
    servers:
      - url: https://localhost:7230/api/
      - url: http://localhost:5084/api/
    tags:
      - name: student
        description: Operations related to students
        externalDocs:
          description: Find out more
          url: http://swagger.io 
    paths:
      /students/:
        get:
          tags:
            - student
          summary: Get all students
          description: Returns a list of schools
          operationId: getAllStudents
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Student'
                application/xml:  
                  schema:
                    $ref: '#/components/schemas/Student'
            '404':
              description: Students not found
      /students/{id}:
        get:
          tags:
            - student
          summary: Find student by ID
          description: Returns a student 
          operationId: getStudentById
          parameters:
            - name: id
              in: path
              description: ID of the student to return
              required: true
              schema:
                type: integer
                format: int64
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Student'          
                application/xml:
                  schema:
                    $ref: '#/components/schemas/Student'
            '400':
              description: Invalid ID supplied
            '404':
              description: Student not found
    components:
      schemas:
        Student:
          type: object
          properties:
            enrolmentid:
              type: integer
              format: int64
              example: 1
            familyname:
              type: string
              example: Doe
            givenname:
              type: string
              example: Jane 
            dateofbirth:
              type: string
              format: date-time
              example: 2015-05-05
            age:
              type: integer
              format: int64
              example: 7
            rollclass:
              type: string
              example: NA
            gender:
              type: string
              example: F
            yearlevel:
              type: string
              example: 5G
            enrolmentStatus:
              type: string
              example: Active
